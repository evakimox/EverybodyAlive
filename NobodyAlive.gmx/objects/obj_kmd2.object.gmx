<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_kmd</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_slime</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///enemy child class setup values
spr_normal = spr_kmd;
spr_attacked = spr_kmdAttacked;
spr_skill = spr_kmdAttacking;
image_speed = 0.1;
state = enemy_state.normal;

spd = 0.2;
hsp = spd;
movingDir = -1;

image_xscale = abs(image_yscale)*movingDir;

Maxhp=80;
hp = Maxhp;
atk = 5;

AttackSource = 0;

//hpbar thing
wide=bbox_right-bbox_left;
HPbar = instance_create(bbox_left,bbox_top-14,obj_enemyHpBar);
HPbar.image_xscale=(wide/78);
HPbar.x=bbox_left;
HPbar.visible=false;
showHPbar = false;
HPbarRemainingTime = 0;


skill1Ready = true;
skill2Ready = true;

exclimationMark = noone;
prevState = enemy_state.normal;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///item drop 
amt = random(5)+2;
for(i=0;i&lt;amt;i++){
    left_right = random(1)-1;
    up_down = random(1)-1;
    instance_create(x+(random(50)+30)*left_right,y+(random(25)+15)*up_down,obj_hun);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///delete hp bar, exclimation mark
with(HPbar){
    instance_destroy();
}

/*
if(instance_exists(exclimationMark)){
    with(exclimationMark){
        instance_destroy();
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack character
if(place_meeting(x,y,obj_main)){
    state=enemy_state.skill1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turn 
state = enemy_state.turn;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state machine implementation
/*自由走动*/
if(state==enemy_state.normal){
    sprite_index = spr_normal;
    friction =0;
    hsp = spd*movingDir;
    hspeed = hsp;    
    vspeed = 0;  
    if(collision_check_enemy()){
        state = enemy_state.turn;
    }
    enemy_in_radius_normal_move(200);
}

/*被攻击*/
if(state == enemy_state.attacked){   
    sprite_index = spr_attacked;
    mask_index = spr_normal;
    MaxImages = sprite_get_number(spr_attacked);
    /*被击动画播放完成*/
    if(image_index &gt;= MaxImages-1){
        friction = 0;
        after_attack_in_radius(200);
    }
    if(place_meeting(x+hsp,y,obj_stonestage1)){
        state = enemy_state.turn;
    }
}
/*主人公半径内状态*/
if(state == enemy_state.noticed){
    prevState = state;
    reaching_main_char();
    /*叹号跟随怪物*/
    if(instance_exists(exclimationMark)){
        exclimationMark.x = (bbox_left+bbox_right)/2;
        exclimationMark.y = bbox_top-14;
        exclimationMark.depth = -100;
    }
}
/*转向*/
if(state == enemy_state.turn){
    redirect_enemy();
    state = prevState;
}

/*技能1*/
if(state == enemy_state.skill1){
    if(skill1Ready){
        sprite_index = spr_skill;
        skill1Ready = false;
        main = instance_place(x,y,obj_main);
        if(main!=noone){
            with(main){
                hp-=8;
                instance_create(view_xview[0],view_yview[0],obj_mainAttackedCtrl);
            }
        }
    }
    MaxImages = sprite_get_number(spr_skill);
    /*技能1动画播放完成*/
    if(image_index &gt;= image_number-1){
        state = enemy_state.normal;
        skill1Ready = true;
    }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hp bar value &amp; follow
HPbar.HPpercent = hp/Maxhp*100;
HPbar.x=bbox_left;
HPbar.y=bbox_top-14;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if hp&lt;=0

if(hp&lt;=0){
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///clocks
    if (alarm[0]==-1){
        alarm[0] = 500;
    }

if(alarm[1]==-1){
    alarm[1]=100;   
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///toggle HP bar visibility
if(showHPbar){
    HPbarRemainingTime = 100;
    showHPbar=false;
}

if(HPbarRemainingTime&gt;0){
    if(instance_exists(HPbar)){
        HPbarRemainingTime-=1;
        HPbar.visible = true;
    }
}
else{
    if(instance_exists(HPbar)){
        HPbar.visible = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///草稿区
xspd = hspeed;
yspd = vspeed;

check_barrier_collision();

hspeed = xspd;
vspeed = yspd;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
